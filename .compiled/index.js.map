{"version":3,"sources":["../src/index.js"],"names":["express","require","graphqlHTTP","glue","schema","resolver","executableSchema","typeDefs","resolvers","app","use","graphiql","listen","console","log"],"mappings":";;AAEA,6CAFA,IAAIA,UAAUC,QAAQ,SAAR,CAAd,CACA,IAAIC,cAAcD,QAAQ,iBAAR,CAAlB;AAEA,IAAME,OAAOF,QAAQ,YAAR,CAAb,C;;AAE6BE,KAAK,aAAL,C,CAArBC,M,SAAAA,M,CAAQC,Q,SAAAA,Q;;AAEhB,IAAMC,mBAAmB,wCAAqB;AAC5CC,YAAUH,MADkC;AAE5CI,aAAWH,QAFiC,EAArB,CAAzB;;;AAKA;AACA,IAAII,MAAMT,SAAV;AACAS,IAAIC,GAAJ;AACE,UADF;AAEER,YAAY;AACVE,UAAQE,gBADE;AAEVK,YAAU,IAFA,EAAZ,CAFF;;;AAOAF,IAAIG,MAAJ,CAAW,IAAX;AACAC,QAAQC,GAAR,CAAY,wDAAZ","file":"index.js","sourcesContent":["var express = require(\"express\");\r\nvar graphqlHTTP = require(\"express-graphql\");\r\nimport { makeExecutableSchema } from \"graphql-tools\";\r\nconst glue = require(\"schemaglue\");\r\n\r\nconst { schema, resolver } = glue(\"src/graphql\");\r\n\r\nconst executableSchema = makeExecutableSchema({\r\n  typeDefs: schema,\r\n  resolvers: resolver\r\n});\r\n\r\n// The root provides the top-level API endpoints\r\nvar app = express();\r\napp.use(\r\n  \"/graphql\",\r\n  graphqlHTTP({\r\n    schema: executableSchema,\r\n    graphiql: true\r\n  })\r\n);\r\napp.listen(4000);\r\nconsole.log(\"Running a GraphQL API server at localhost:4000/graphql\");\r\n"]}